/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oj;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;
import java.util.logging.Formatter;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.write.WriteException;

/**
 *
 * @author Junaeid
 */
public class loginframe extends javax.swing.JFrame {

    /**
     * Creates new form loginframe
     */
    public loginframe() {
        initComponents();
    }
    
    public loginframe(String us) {
        initComponents();
        user=us;
        showproblem();
        addtosubtable();
        mysub(us);
        jLabel5.setText("Hi, "+us);
        
        //setUndecorated(true);
       // setAlwaysOnTop(true);
        //setResizable(false);
       // setVisible(true);
        //Toolkit tk = Toolkit.getDefaultToolkit();
       // double x = (double) tk.getScreenSize().getWidth();
       // double y = (double) tk.getScreenSize().getHeight();
       // this.setSize((int)x,(int)y);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        idcombo = new javax.swing.JComboBox<>();
        openpdf = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        subarea = new javax.swing.JTextArea();
        problang = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        subprobid = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        submissionTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        mysub = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        problinklabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        probid = new javax.swing.JTextField();
        probname = new javax.swing.JTextField();
        category = new javax.swing.JComboBox<>();
        problink = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        indata = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        outdata = new javax.swing.JTextArea();
        addproblem = new javax.swing.JButton();
        categorylabel = new javax.swing.JLabel();
        probidlabel = new javax.swing.JLabel();
        probnamelabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RUET OJ");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("RUET OJ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 255));
        jLabel5.setText("");

        jLabel3.setIcon(new javax.swing.ImageIcon("G:\\Project1\\OJ\\Untitled2.png")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Log Out");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addComponent(jLabel3))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jButton1.setText("Problemsets");
        jButton1.setAlignmentY(0.0F);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Submit Code");
        jButton2.setAlignmentY(0.0F);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Submissions");
        jButton3.setAlignmentY(0.0F);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("My Submissions");
        jButton4.setAlignmentY(0.0F);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton1)
                .addGap(56, 56, 56)
                .addComponent(jButton2)
                .addGap(55, 55, 55)
                .addComponent(jButton3)
                .addGap(57, 57, 57)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        add.setBackground(new java.awt.Color(0, 204, 204));
        add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add.setText("Add Problem");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Problem ID", "Name", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setResizable(false);
            table1.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Open Problem");

        idcombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        openpdf.setBackground(new java.awt.Color(204, 255, 204));
        openpdf.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        openpdf.setText("Open");
        openpdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openpdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idcombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7)
                                .addGap(0, 83, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(openpdf)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(idcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(openpdf)
                .addGap(104, 104, 104)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Problemsets", jPanel3);

        subarea.setColumns(20);
        subarea.setRows(5);
        subarea.setText("/*    In case of Java language, \n   the main class must be named as \"M\"+Problem ID */\n\n");
        jScrollPane2.setViewportView(subarea);

        problang.setBackground(new java.awt.Color(153, 153, 255));
        problang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        problang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C", "C++", "Java", " " }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Language");

        submit.setBackground(new java.awt.Color(0, 255, 204));
        submit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Problem ID");

        subprobid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(subprobid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(problang, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subprobid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(problang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(submit)
                .addGap(0, 238, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Submit Code", jPanel4);

        submissionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Problem ID", "User", "Problem name", "Language", "Verdict"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(submissionTable);
        if (submissionTable.getColumnModel().getColumnCount() > 0) {
            submissionTable.getColumnModel().getColumn(0).setResizable(false);
            submissionTable.getColumnModel().getColumn(0).setHeaderValue("#");
            submissionTable.getColumnModel().getColumn(1).setResizable(false);
            submissionTable.getColumnModel().getColumn(1).setHeaderValue("Problem ID");
            submissionTable.getColumnModel().getColumn(2).setResizable(false);
            submissionTable.getColumnModel().getColumn(2).setHeaderValue("User");
            submissionTable.getColumnModel().getColumn(3).setResizable(false);
            submissionTable.getColumnModel().getColumn(3).setHeaderValue("Problem name");
            submissionTable.getColumnModel().getColumn(4).setResizable(false);
            submissionTable.getColumnModel().getColumn(4).setHeaderValue("Language");
            submissionTable.getColumnModel().getColumn(5).setResizable(false);
            submissionTable.getColumnModel().getColumn(5).setHeaderValue("Verdict");
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Submissions", jPanel5);

        mysub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Problem ID", "Problem Name", "Language", "Verdict"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(mysub);
        if (mysub.getColumnModel().getColumnCount() > 0) {
            mysub.getColumnModel().getColumn(0).setResizable(false);
            mysub.getColumnModel().getColumn(1).setResizable(false);
            mysub.getColumnModel().getColumn(2).setResizable(false);
            mysub.getColumnModel().getColumn(3).setResizable(false);
            mysub.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("My Submissions", jPanel8);

        problinklabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        problinklabel.setText("Link");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Sample Input");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Sample Output");

        category.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard" }));

        indata.setColumns(20);
        indata.setRows(5);
        jScrollPane3.setViewportView(indata);

        outdata.setColumns(20);
        outdata.setRows(5);
        jScrollPane4.setViewportView(outdata);

        addproblem.setBackground(new java.awt.Color(0, 204, 204));
        addproblem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addproblem.setText("Add");
        addproblem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addproblemActionPerformed(evt);
            }
        });

        categorylabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        categorylabel.setText("Category");

        probidlabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        probidlabel.setText("Problem id");

        probnamelabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        probnamelabel.setText("Problem Name");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categorylabel)
                                    .addComponent(problinklabel))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(problink)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(probnamelabel)
                                    .addComponent(probidlabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(probid, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(probname, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(474, Short.MAX_VALUE))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(addproblem)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(probidlabel)
                    .addComponent(probid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(probname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(probnamelabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categorylabel)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(problink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(problinklabel))
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(addproblem)
                .addGap(64, 64, 64))
        );

        jTabbedPane1.addTab("Add Problem", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        /*try {
           BufferedReader out;
            out = new BufferedReader(new FileReader("Data\\Probleminfo\\Problems.txt"));
         modelproblem=(DefaultTableModel) table1.getModel();
         Object[] tablelines = out.lines().toArray();
         for(int i=0;i<tablelines.length;i++)
         {
             String line = tablelines[i].toString().trim();
             String[] datarow = line.split(" ");
             Object row[]=datarow;
             modelproblem.addRow(row);
             idcombo.addItem(datarow[0]);
             subprobid.addItem(datarow[0]);
         }
        
        } catch (IOException ex) {
            Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
        }*/
         jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        jTabbedPane1.setSelectedIndex(4);;
    }//GEN-LAST:event_addActionPerformed

    private void addproblemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addproblemActionPerformed
        if(!probid.getText().isEmpty()) {
					
		FileWriter writer1;
		FileWriter writer2;
        	FileWriter writer3;
                FileWriter writer4;
			// TODO Auto-generated method stub
		try {
	        	Files.createDirectories(Paths.get("Data\\Problem\\" +probid.getText()));
						
		} catch (IOException e) {
					// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
		writer1 = new FileWriter("Data\\Problem\\" +probid.getText()+"\\"+probid.getText()+"_in.txt");
		indata.write(writer1);
		writer1.close();
		writer2 = new FileWriter("Data\\Problem\\" +probid.getText()+"\\"+probid.getText()+"_out.txt");
		outdata.write(writer2);
		writer2.close();
		writer3 = new FileWriter("Data\\problem\\" +probid.getText()+"\\"+probid.getText()+"_link.txt");
		problink.write(writer3);
		writer3.close();
                writer4 = new FileWriter("Data\\problem\\" +probid.getText()+"\\"+probid.getText()+"_name.txt");
		probname.write(writer4);
		writer4.close();
		String s1 = problink.getText().toString();
		String s2 = "Data\\problem\\" +probid.getText()+"\\"+probid.getText()+".pdf";
		if(new File(s1).exists()) {
			fileCopy(new File(s1), new File(s2));
					//new pdfRead().openPdf(new File(s2));
			String []value = new String[3];
		value[0]=probid.getText().toString();
		value[1]=probname.getText().toString();
		value[2]=category.getSelectedItem().toString();
	        
             Object rowObject[]=value;
             modelproblem=(DefaultTableModel) table1.getModel();
             modelproblem.addRow(rowObject);
             idcombo.addItem(value[0]);
             subprobid.addItem(value[0]);
          JOptionPane.showMessageDialog(this,"Problem added Succesfully");
          clearFields();
		new textrecord().writein(value);
                //JOptionPane.showMessageDialog(this,"Excel write");
		
          
		}else {
			JOptionPane.showMessageDialog(this,"Error pdf");
		        }
//						try {
//							fileCopy(new File(s1), new File(s2));
//						} catch (Exception e) {
//							// TODO: handle exception
//							jp("error pdf");
//						}
						
						
		} catch (IOException e) {
						// TODO Auto-generated catch block
			e.printStackTrace();
		}
               
        }
    }//GEN-LAST:event_addproblemActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        
        if (problang.getSelectedItem().toString().toLowerCase().equals("c")) {
					//String codefileString = "data/submitted code/"+"Problem4A"+"."+"java";
					String codefileString = subprobid.getSelectedItem() + "." + "c";
					FileWriter codeWriter;
					try {
						codeWriter = new FileWriter(codefileString);
						subarea.write(codeWriter);
	subarea.setText("/*    In case of Java language, \n" +"   the main class must be named as \"M\"+Problem ID */\n\n");
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					CChecking cChecking = new CChecking((String)subprobid.getSelectedItem()+".c","Data\\Problem\\" +subprobid.getSelectedItem()+"\\"+subprobid.getSelectedItem());
					String resultJava = cChecking.compilec();
                                        JOptionPane.showMessageDialog(null,resultJava);
					//System.out.println(resultJava);
					//System.out.println(sublang.getSelectedItem().toString());
                                        modelsubmission=(DefaultTableModel) submissionTable.getModel();
                                        mysubmission=(DefaultTableModel) mysub.getModel();
                                        Object[] tablelines = null;
                                        Object[] subtablelines = null;
                                       int i=0,j=0;
                                    Scanner st=null;
                            File a,b;
                    a = new File("Data\\Submissions\\submissions.txt");
                    b = new File("Data\\Submissions\\"+user+"sub.txt");
                   if(!a.exists()){
                                            try {
                                                a.createNewFile();
                                            } catch (IOException ex) {
                                                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                   }
                   if(!b.exists()){
                                            try {
                                                b.createNewFile();
                                            } catch (IOException ex) {
                                                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                   }
                                    
       try {
            st = new Scanner(new File("Data\\Problem\\"+(String)subprobid.getSelectedItem()+"\\"+(String)subprobid.getSelectedItem()+"_name.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
				try {	
                                        BufferedReader out,subout;
                out = new BufferedReader(new FileReader("Data\\Submissions\\submissions.txt"));
               subout = new BufferedReader(new FileReader("Data\\Submissions\\"+user+"sub.txt"));
                tablelines=out.lines().toArray();
                i=tablelines.length;
                 ++i;
                subtablelines=subout.lines().toArray();
                j=subtablelines.length;
                 ++j;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,"Error");
            }
					
                                      
                                      
                                        String[] value = new String[6];
                                        String[] val=new String[5];
                                        
					value[0]=String.valueOf(i);
					value[1] = (String) subprobid.getSelectedItem();
                                        value[2] = user;
                                        value[3]=(String)st.next();
                                        value[4] = "C";
                                        value[5]= resultJava;
                                        
                                        Object [] v1 = value;
					//modelsubmission.
					((DefaultTableModel) modelsubmission).addRow(v1);
        
                               val[0]=String.valueOf(j);
                               val[1]=value[1];
                               val[2]=value[3];
                               val[3]=value[4];
                               val[4]=value[5];
                               Object[] v2 = val;
                              ((DefaultTableModel) mysubmission).addRow(v2); 
            try {
                 new textrecord().submission(value);
                 new textrecord().mysub(val,user);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
                                        
        }
        
        else if (problang.getSelectedItem().toString().toLowerCase().equals("c++")) {
					//String codefileString = "data/submitted code/"+"Problem4A"+"."+"java";
					String codefileString = subprobid.getSelectedItem() + "." + "cpp";
					FileWriter codeWriter;
					try {
						codeWriter = new FileWriter(codefileString);
						subarea.write(codeWriter);
       subarea.setText("/*    In case of Java language, \n" +"   the main class must be named as \"M\"+Problem ID */\n\n"); 
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					CppChecking cChecking = new CppChecking((String)subprobid.getSelectedItem()+".cpp","Data\\Problem\\" +subprobid.getSelectedItem()+"\\"+subprobid.getSelectedItem());
					String resultJava = cChecking.compilec();
                                        JOptionPane.showMessageDialog(null,resultJava);
					//System.out.println(resultJava);
					//System.out.println(sublang.getSelectedItem().toString());
                                     modelsubmission=(DefaultTableModel) submissionTable.getModel();
                                        mysubmission=(DefaultTableModel) mysub.getModel();
                                        Object[] tablelines = null;
                                        Object[] subtablelines = null;
                                       int i=0,j=0;
                                    Scanner st=null;

                                              File a,b;
                    a = new File("Data\\Submissions\\submissions.txt");
                    b = new File("Data\\Submissions\\"+user+"sub.txt");
                   if(!a.exists()){
                                            try {
                                                a.createNewFile();
                                            } catch (IOException ex) {
                                                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                   }
                   if(!b.exists()){
                                            try {
                                                b.createNewFile();
                                            } catch (IOException ex) {
                                                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                   }
                   
         try {
            st = new Scanner(new File("Data\\Problem\\"+(String)subprobid.getSelectedItem()+"\\"+(String)subprobid.getSelectedItem()+"_name.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
				try {	
                                        BufferedReader out,subout;
                out = new BufferedReader(new FileReader("Data\\Submissions\\submissions.txt"));
               subout = new BufferedReader(new FileReader("Data\\Submissions\\"+user+"sub.txt") );
                tablelines=out.lines().toArray();
                i=tablelines.length;
                 ++i;
                subtablelines=subout.lines().toArray();
                j=subtablelines.length;
                 ++j;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
					
                                      
                                      
                                        String[] value = new String[6];
                                        String[] val=new String[5];
                                        
					value[0]=String.valueOf(i);
					value[1] = (String) subprobid.getSelectedItem();
                                        value[2] = user;
                                        value[3]=(String)st.next();
                                        value[4] = "C++";
                                        value[5]= resultJava;
                                        
                                        Object [] v1 = value;
					//modelsubmission.
					((DefaultTableModel) modelsubmission).addRow(v1);
        
                               val[0]=String.valueOf(j);
                               val[1]=value[1];
                               val[2]=value[3];
                               val[3]=value[4];
                               val[4]=value[5];
                               Object[] v2 = val;
                              ((DefaultTableModel) mysubmission).addRow(v2); 
            try {
                 new textrecord().submission(value);
                 new textrecord().mysub(val,user);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
                                        
        }
        
        else if (problang.getSelectedItem().toString().toLowerCase().equals("java")) {
					//String codefileString = "data/submitted code/"+"Problem4A"+"."+"java";
					String codefileString = "M"+subprobid.getSelectedItem() + "." + "java";
					FileWriter codeWriter;
					try {
						codeWriter = new FileWriter(codefileString);
						subarea.write(codeWriter);
	subarea.setText("/*    In case of Java language, \n" +"   the main class must be named as \"M\"+Problem ID */\n\n");
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					JavaChecking cChecking = new JavaChecking((String)"M"+subprobid.getSelectedItem()+".java","Data\\Problem\\" +subprobid.getSelectedItem()+"\\"+subprobid.getSelectedItem());
					String resultJava = cChecking.compilejava();
                                        JOptionPane.showMessageDialog(null,resultJava);
					//System.out.println(resultJava);
					//System.out.println(sublang.getSelectedItem().toString());
                                      modelsubmission=(DefaultTableModel) submissionTable.getModel();
                                        mysubmission=(DefaultTableModel) mysub.getModel();
                                        Object[] tablelines = null;
                                        Object[] subtablelines = null;
                                       int i=0,j=0;
                                    Scanner st=null;

                          File a,b;
                    a = new File("Data\\Submissions\\submissions.txt");
                    b = new File("Data\\Submissions\\"+user+"sub.txt");
                   if(!a.exists()){
                                            try {
                                                a.createNewFile();
                                            } catch (IOException ex) {
                                                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                   }
                   if(!b.exists()){
                                            try {
                                                b.createNewFile();
                                            } catch (IOException ex) {
                                                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
                                            }
                   }
                   
       try {
            st = new Scanner(new File("Data\\Problem\\"+(String)subprobid.getSelectedItem()+"\\"+(String)subprobid.getSelectedItem()+"_name.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
				try {	
                                        BufferedReader out,subout;
                out = new BufferedReader(new FileReader("Data\\Submissions\\submissions.txt"));
               subout = new BufferedReader(new FileReader("Data\\Submissions\\"+user+"sub.txt"));
                tablelines=out.lines().toArray();
                i=tablelines.length;
                 ++i;
                subtablelines=subout.lines().toArray();
                j=subtablelines.length;
                 ++j;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
					
                                      
                                      
                                        String[] value = new String[6];
                                        String[] val=new String[5];
                                        
					value[0]=String.valueOf(i);
					value[1] = (String) subprobid.getSelectedItem();
                                        value[2] = user;
                                        value[3]=(String)st.next();
                                        value[4] = "Java";
                                        value[5]= resultJava;
                                        
                                        Object [] v1 = value;
					//modelsubmission.
					((DefaultTableModel) modelsubmission).addRow(v1);
        
                               val[0]=String.valueOf(j);
                               val[1]=value[1];
                               val[2]=value[3];
                               val[3]=value[4];
                               val[4]=value[5];
                               Object[] v2 = val;
                              ((DefaultTableModel) mysubmission).addRow(v2); 
            try {
                 new textrecord().submission(value);
                 new textrecord().mysub(val,user);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void openpdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openpdfActionPerformed
        Object id = idcombo.getSelectedItem();
        String idno = (String) id;
        try {
            openPdf(idno);
        } catch (IOException ex) {
            Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openpdfActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        dispose();
        new NewJFrame().setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked
    
    public void showproblem(){
         try {
            BufferedReader out;
            out = new BufferedReader(new FileReader("Data\\Probleminfo\\Problems.txt"));
        
         modelproblem=(DefaultTableModel) table1.getModel();
         Object[] tablelines = out.lines().toArray();
         for(int i=0;i<tablelines.length;i++)
         {
             String line = tablelines[i].toString().trim();
             String[] datarow = line.split("\t");
             Object row[]=datarow;
             modelproblem.addRow(row);
             idcombo.addItem(datarow[0]);
             subprobid.addItem(datarow[0]);
         }
         } catch (FileNotFoundException ex) {
            Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void addtosubtable(){
         try {
            BufferedReader out;
            out = new BufferedReader(new FileReader("Data\\Submissions\\submissions.txt"));
        
         modelsubmission=(DefaultTableModel) submissionTable.getModel();
         Object[] tablelines = out.lines().toArray();
         for(int i=0;i<tablelines.length;i++)
         {
             String line = tablelines[i].toString().trim();
             String[] datarow = line.split(" \t ");
             Object row[]=datarow;
              modelsubmission.addRow(row);
         }
         } catch (FileNotFoundException ex) {
            Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void mysub(String us){
        try {
            BufferedReader out;
            out = new BufferedReader(new FileReader("Data\\Submissions\\"+us+"sub.txt"));
            
        
         mysubmission=(DefaultTableModel) mysub.getModel();
         Object[] tablelines = out.lines().toArray();
         for(int i=0;i<tablelines.length;i++)
         {
             String line = tablelines[i].toString().trim();
             String[] datarow = line.split(" \t ");
             Object row[]=datarow;
              mysubmission.addRow(row);
         }
         } catch (FileNotFoundException ex) {
            Logger.getLogger(loginframe.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    public void clearFields(){
        probid.setText(null);
        probname.setText(null);
        problink.setText(null);
        indata.setText(null);
        outdata.setText(null);
    }
        
    public void openPdf(String s) throws IOException {
		try {
                    
			File pdf = new File("Data\\Problem\\"+s+"\\"+s+".pdf");
			//File pdf = new File("data\\problem\\"+s+".pdf");
			//File pdf = new File("E:\\practice\\java swing practice\\swing practice\\data\\problem\\codef.pdf");
			//File pdf = new File("C:\\Users\\MD. Fahim Faisal\\Documents\\dadospdf.com_problem-4a-codeforces-.pdf");
			if(pdf.exists()) {
				if(Desktop.isDesktopSupported()) {
					Desktop.getDesktop().open(pdf);
				}else {
					JOptionPane.showMessageDialog(null,"error to open pdf");
				}
			}else {
				JOptionPane.showMessageDialog(null,"error to open pdf");
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null,"error to open pdf");
			e.printStackTrace();
		}
	}

    public void fileCopy(File src,File dst) throws IOException {
		Files.copy(src.toPath(), dst.toPath());
	}
    
    /**
     *
     */
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new loginframe().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton addproblem;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JLabel categorylabel;
    private javax.swing.JComboBox<String> idcombo;
    private javax.swing.JTextArea indata;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable mysub;
    private javax.swing.JButton openpdf;
    private javax.swing.JTextArea outdata;
    private javax.swing.JTextField probid;
    private javax.swing.JLabel probidlabel;
    private javax.swing.JComboBox<String> problang;
    private javax.swing.JTextField problink;
    private javax.swing.JLabel problinklabel;
    private javax.swing.JTextField probname;
    private javax.swing.JLabel probnamelabel;
    private javax.swing.JTextArea subarea;
    private javax.swing.JTable submissionTable;
    private javax.swing.JButton submit;
    private javax.swing.JComboBox<String> subprobid;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables
  DefaultTableModel modelsubmission, modelproblem, mysubmission;
  String user;
  
    
}